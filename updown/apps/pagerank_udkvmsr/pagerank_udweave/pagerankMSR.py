from linker.EFAProgram import efaProgram

## Global constants

@efaProgram
def EFA_pagerankMSR(efa):
  efa.code_level = 'machine'
  state0 = efa.State("udweave_init") #Only one state code 
  efa.add_initId(state0.state_id)
  ## Static declarations
  ## Scoped Variable "vid" uses Register X16, scope (0)
  ## Scoped Variable "degree" uses Register X17, scope (0)
  ## Scoped Variable "nlist_ptr" uses Register X18, scope (0)
  ## Scoped Variable "out_value" uses Register X19, scope (0)
  ## Scoped Variable "nlist_bound" uses Register X20, scope (0)
  ## Scoped Variable "num_processed" uses Register X21, scope (0)
  ## Scoped Variable "emit_evw" uses Register X22, scope (0)
  ## Param "vid_op" uses Register X8, scope (0->4)
  ## Param "deg_op" uses Register X9, scope (0->4)
  ## Param "neighbors_op" uses Register X10, scope (0->4)
  ## Param "val_op" uses Register X11, scope (0->4)
  ## Param "vertex_addr" uses Register X12, scope (0->4)
  ## Scoped Variable "evw" uses Register X23, scope (0->4)
  ## Scoped Variable "max_num_fetch" uses Register X24, scope (0->4)
  ## Scoped Variable "deg" uses Register X25, scope (0->4)
  ## Scoped Variable "evw" uses Register X23, scope (0->4->7)
  ## Param "e0" uses Register X8, scope (0->11)
  ## Param "e1" uses Register X9, scope (0->11)
  ## Param "e2" uses Register X10, scope (0->11)
  ## Param "e3" uses Register X11, scope (0->11)
  ## Param "e4" uses Register X12, scope (0->11)
  ## Param "e5" uses Register X13, scope (0->11)
  ## Param "e6" uses Register X14, scope (0->11)
  ## Param "e7" uses Register X15, scope (0->11)
  ## Param "curr_nlist_addr" uses Register X3, scope (0->11)
  ## Scoped Variable "tmp_nlist_ptr" uses Register X23, scope (0->11)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->14)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->20)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->26)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->32)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->38)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->44)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->50)
  ## Scoped Variable "evw" uses Register X24, scope (0->11->56)
  ## Scoped Variable "tmp_lm_ptr" uses Register X16, scope (0)
  ## Param "partition_array" uses Register X8, scope (0->60)
  ## Param "NUM_PARTITION_PER_LANE" uses Register X9, scope (0->60)
  ## Param "num_lanes" uses Register X10, scope (0->60)
  ## Param "vertices" uses Register X11, scope (0->60)
  ## Param "num_vertices" uses Register X12, scope (0->60)
  ## Param "values" uses Register X13, scope (0->60)
  ## Param "num_values" uses Register X14, scope (0->60)
  ## Scoped Variable "send_buffer" uses Register X17, scope (0->60)
  ## Scoped Variable "evw" uses Register X18, scope (0->60)
  
  #################################################
  ###### Writing code for thread PageRankMSR ######
  #################################################
  # Writing code for event PageRankMSR::kv_map
  tranPageRankMSR__kv_map = efa.writeEvent('PageRankMSR::kv_map')
  tranPageRankMSR__kv_map.writeAction(f"entry: addi X8 X16 0") 
  tranPageRankMSR__kv_map.writeAction(f"addi X9 X17 0") 
  ## The vertex has degree 0, skip it
  tranPageRankMSR__kv_map.writeAction(f"bnei X9 0 __if_kv_map_5_post") 
  tranPageRankMSR__kv_map.writeAction(f"__if_kv_map_3_true: evi X2 X23 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__kv_map.writeAction(f"sendr_wcont X23 X2 X16 X16") 
  tranPageRankMSR__kv_map.writeAction(f"yield") 
  tranPageRankMSR__kv_map.writeAction(f"__if_kv_map_5_post: sli X9 X23 3") 
  tranPageRankMSR__kv_map.writeAction(f"add X10 X23 X20") 
  tranPageRankMSR__kv_map.writeAction(f"addi X10 X18 0") 
  tranPageRankMSR__kv_map.writeAction(f"evi X2 X23 PageRankMSR::rd_nlist_return 1") 
  tranPageRankMSR__kv_map.writeAction(f"movir X24 16") 
  tranPageRankMSR__kv_map.writeAction(f"__while_kv_map_9_condition: ble X20 X18 __while_kv_map_11_post") 
  tranPageRankMSR__kv_map.writeAction(f"__while_kv_map_10_body: send_dmlm_ld X18 X23 8") 
  tranPageRankMSR__kv_map.writeAction(f"addi X18 X18 64") 
  tranPageRankMSR__kv_map.writeAction(f"jmp __while_kv_map_9_condition") 
  tranPageRankMSR__kv_map.writeAction(f"__while_kv_map_11_post: fcnvt.i64.64 X9 X25")  # This is for casting. May be used later on
  tranPageRankMSR__kv_map.writeAction(f"fdiv.64 X11 X25 X19") 
  tranPageRankMSR__kv_map.writeAction(f"movir X21 0") 
  tranPageRankMSR__kv_map.writeAction(f"movir X22 0") 
  tranPageRankMSR__kv_map.writeAction(f"evlb X22 PageRankMSR::kv_map_emit") 
  tranPageRankMSR__kv_map.writeAction(f"evi X22 X22 255 4") 
  tranPageRankMSR__kv_map.writeAction(f"ev X22 X22 X0 X0 8") 
  tranPageRankMSR__kv_map.writeAction(f"yield") 
  
  # Writing code for event PageRankMSR::rd_nlist_return
  tranPageRankMSR__rd_nlist_return = efa.writeEvent('PageRankMSR::rd_nlist_return')
  tranPageRankMSR__rd_nlist_return.writeAction(f"entry: addi X3 X23 0") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X8 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_5_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_3_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_5_post: bgt X20 X23 __if_rd_nlist_return_11_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_9_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_11_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X9 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_17_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_15_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_17_post: bgt X20 X23 __if_rd_nlist_return_23_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_21_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_23_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X10 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_29_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_27_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_29_post: bgt X20 X23 __if_rd_nlist_return_35_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_33_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_35_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X11 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_41_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_39_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_41_post: bgt X20 X23 __if_rd_nlist_return_47_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_45_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_47_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X12 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_53_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_51_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_53_post: bgt X20 X23 __if_rd_nlist_return_59_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_57_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_59_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X13 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_65_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_63_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_65_post: bgt X20 X23 __if_rd_nlist_return_71_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_69_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_71_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X14 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_77_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_75_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_77_post: bgt X20 X23 __if_rd_nlist_return_83_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_81_true: yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_83_post: movir X24 -1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sri X24 X24 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X22 X24 X15 X19") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"addi X21 X21 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"bne X21 X17 __if_rd_nlist_return_89_post") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_87_true: evi X2 X24 PageRankMSR::kv_map_return 1") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"sendr_wcont X24 X2 X16 X16") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"yield") 
  tranPageRankMSR__rd_nlist_return.writeAction(f"__if_rd_nlist_return_89_post: yield") 
  
  
  ################################################
  ###### Writing code for thread InitUpDown ######
  ################################################
  # Writing code for event InitUpDown::init
  tranInitUpDown__init = efa.writeEvent('InitUpDown::init')
  tranInitUpDown__init.writeAction(f"entry: print 'Top parameters: partition_array=0x%lX, num_lanes=%ld, vertices=0x%lX, values=0x%lX' X8 X10 X11 X13") 
  tranInitUpDown__init.writeAction(f"addi X7 X17 8") 
  tranInitUpDown__init.writeAction(f"movrl X8 0(X17) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X9 8(X17) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X10 16(X17) 0 8") 
  tranInitUpDown__init.writeAction(f"addi X7 X16 768") 
  tranInitUpDown__init.writeAction(f"movrl X11 0(X16) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X12 8(X16) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X16 24(X17) 0 8") 
  tranInitUpDown__init.writeAction(f"addi X7 X16 832") 
  tranInitUpDown__init.writeAction(f"movrl X13 0(X16) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X14 8(X16) 0 8") 
  tranInitUpDown__init.writeAction(f"movrl X16 32(X17) 0 8") 
  tranInitUpDown__init.writeAction(f"movir X18 0") 
  tranInitUpDown__init.writeAction(f"evlb X18 PageRankMSR::map_shuffle_reduce") 
  tranInitUpDown__init.writeAction(f"evi X18 X18 255 4") 
  tranInitUpDown__init.writeAction(f"ev X18 X18 X0 X0 8") 
  tranInitUpDown__init.writeAction(f"send_wret X18 InitUpDown::terminate X17 5 X19") 
  tranInitUpDown__init.writeAction(f"addi X7 X16 0") 
  tranInitUpDown__init.writeAction(f"movir X20 0") 
  tranInitUpDown__init.writeAction(f"movrl X20 0(X16) 0 8") 
  tranInitUpDown__init.writeAction(f"yield") 
  
  # Writing code for event InitUpDown::terminate
  tranInitUpDown__terminate = efa.writeEvent('InitUpDown::terminate')
  tranInitUpDown__terminate.writeAction(f"entry: print 'PageRank Map Shuffle Reduce returned. Finish updown execution and return to top.'") 
  tranInitUpDown__terminate.writeAction(f"movir X18 1") 
  tranInitUpDown__terminate.writeAction(f"movrl X18 0(X16) 0 8") 
  tranInitUpDown__terminate.writeAction(f"yield_terminate") 
  
